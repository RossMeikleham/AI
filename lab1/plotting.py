# Plots the sample data generated by the Haskell program
import matplotlib.pyplot as pl
import numpy as np

# Normalise a list of samples between 1.0 and -1.0
def normalise(data):
    minV = min(data)
    maxV = max(data)

    def normaliseItem(item):
        return ((2.0 * (item - minV)) / (maxV - minV)) - 1.0
        

    return [normaliseItem(i) for i in data]
    

def plotConvolutionData():
    convolutionData = np.loadtxt("Convolution.csv", delimiter=',')
    xs = convolutionData[:,0]
    ys = convolutionData[:,1]
    nys = normalise(ys)

    pl.plot(xs, nys)
    pl.title('Convolution')
    pl.xlabel("Normalised y[n]")
    pl.ylabel("Time in Milliseconds")

    pl.grid(True)

    pl.show()


def main():
    plotConvolutionData()

main()
